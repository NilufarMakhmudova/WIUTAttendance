@model AttendanceApplication.Models.Seminar

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Seminar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        
        <div class="form-group">
            @Html.LabelFor(model => model.Module.Name, "Module", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ModuleID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.TutorID, "Tutor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TutorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TutorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DayOfWeek, "Day of week", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("day", (IEnumerable<SelectListItem>)ViewBag.days, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DayOfWeek, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, "Start time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("startTime", (IEnumerable<SelectListItem>)ViewBag.startTimes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("building", (IEnumerable<SelectListItem>)ViewBag.buildings, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Room, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Room, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Room, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
